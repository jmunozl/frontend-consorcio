{"version":3,"sources":["Drugstores/components/Header.js","Drugstores/components/Search.js","Drugstores/components/ListStores.js","Drugstores/services/index.js","Drugstores/components/Loading.js","Drugstores/components/DrugstoreLayout.js","serviceWorker.js","index.js"],"names":["Header","title","className","prototype","PropTypes","string","isRequired","Search","handlerSubmit","useState","comuna","local","formSearch","setFormSearch","handleChange","event","target","name","value","console","log","onSubmit","e","preventDefault","Column","size","style","color","type","onChange","ListStores","stores","map","store","index","key","background","Content","local_nombre","local_direccion","local_telefono","local_lat","local_lng","baseUrl","process","REACT_APP_BASE_URL","baseULComuna","getStores","data","a","axios","url","method","getComunas","comunas","FormData","append","post","then","response","catch","error","Loading","width","height","DrugstoreLayout","isLoading","setIsLoading","setStores","setComunas","undefined","status","useEffect","loadComuna","loadStores","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8QAKMA,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,kBAAC,UAAD,KACE,kBAAC,YAAD,KACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QAAQD,OAOjCD,EAAOG,UAAY,CACjBF,MAAOG,IAAUC,OAAOC,YAUXN,Q,cC0BAO,EAlDA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACEC,mBAAS,CAC3CC,OAAQ,GACRC,MAAO,KAHyB,mBAC3BC,EAD2B,KACfC,EADe,KAK5BC,EAAa,SAACC,GAAS,IAAD,EACLA,EAAMC,OAApBC,EADmB,EACnBA,KAAKC,EADc,EACdA,MACZC,QAAQC,IAAIH,EAAKC,GACjBL,EAAc,2BAAID,GAAL,kBAAiBK,EAAMC,MAQtC,OACE,6BACE,0BAAMG,SAPU,SAACC,GACnBA,EAAEC,iBACFf,EAAc,eAAII,MAMhB,kBAAC,UAAD,KACE,kBAAC,UAAQY,OAAT,CAAgBC,KAAM,GACpB,uBAAGC,MAAO,CAAEC,MAAO,SAAWzB,UAAU,QAAxC,YAEF,kBAAC,UAAQsB,OAAT,CAAgBC,KAAM,GACpB,2BAAOG,KAAK,OAAO1B,UAAU,QAAQe,KAAK,SAASY,SAAUf,EAAcI,MAAON,EAAWF,UAE/F,kBAAC,UAAQc,OAAT,CAAgBC,KAAM,GACpB,uBAAGC,MAAO,CAAEC,MAAO,SAAUzB,UAAU,QAAvC,WAEF,kBAAC,UAAQsB,OAAT,CAAgBC,KAAM,GACpB,2BAAOG,KAAK,OAAO1B,UAAU,QAAQe,KAAK,QAAQY,SAAUf,EAAcI,MAAON,EAAWD,SAE9F,kBAAC,UAAQa,OAAT,CAAgBC,KAAM,GACpB,kBAAC,SAAD,CAAQG,KAAK,SAASD,MAAM,WAA5B,eCKKG,EAvCI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpB,OADAZ,QAAQC,IAAIW,GAEV,kBAAC,UAAD,KAEIA,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACT,kBAAC,UAAQV,OAAT,CAAgBC,KAAM,EAAGU,IAAKD,GAC5B,kBAAC,OAAD,CAAMR,MAAO,CAAEU,WAAY,YACzB,kBAAC,OAAKC,QAAN,KACE,kBAAC,UAAD,CAASnC,UAAU,8BAA8BuB,KAAM,GACrD,uBAAGvB,UAAU,oBAAb,WACC+B,EAAMK,cAET,kBAAC,UAAD,CAASpC,UAAU,8BAA8BuB,KAAM,GACrD,uBAAGvB,UAAU,oBAAb,iBACC+B,EAAMM,iBAET,kBAAC,UAAD,CAASrC,UAAU,8BAA8BuB,KAAM,GACrD,uBAAGvB,UAAU,oBAAb,gBACC+B,EAAMO,gBAET,kBAAC,UAAD,CAAStC,UAAU,8BAA8BuB,KAAM,GACrD,uBAAGvB,UAAU,oBAAb,YACC+B,EAAMQ,WAET,kBAAC,UAAD,CAASvC,UAAU,8BAA8BuB,KAAM,GACrD,uBAAGvB,UAAU,oBAAb,aACC+B,EAAMS,mB,iBC5BnBC,EAAUC,mHAAYC,mBACtBC,EAAe,oGAEd,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,SAAAC,EAAA,+EAEUC,IAAM,CACjBC,IAAI,GAAD,OAAKR,EAAL,kCAAsCK,EAAKtC,OAA3C,yBAAkEsC,EAAKrC,OAC1EyC,OAAQ,QAJP,wEAOHjC,QAAQC,IAAR,MAPG,yD,sBAWA,SAAeiC,IAAtB,+B,4CAAO,8BAAAJ,EAAA,sEAECK,EAAU,IACRN,EAAO,IAAIO,UAEZC,OAAO,SAAU,KALnB,SAOGN,IAAMO,KAAN,UAAcX,GAAgBE,GAAMU,MAAM,SAAAC,GAC9CL,EAAUK,KACRC,OAAM,SAAAC,GACR1C,QAAQC,IAAIyC,MAVX,gCAYIP,GAZJ,gCAcHnC,QAAQC,IAAR,MAdG,0D,sBCZP,IAQe0C,EARC,WACd,OACE,yBAAK5D,UAAU,uBACb,kBAAC,SAAD,CAAQwB,MAAO,CAAEqC,MAAO,IAAKC,OAAQ,SC8D5BC,EA5DS,WAAO,IAAD,EACMxD,oBAAS,GADf,mBACrByD,EADqB,KACVC,EADU,OAEA1D,mBAAS,IAFT,mBAErBsB,EAFqB,KAEbqC,EAFa,OAGE3D,mBAAS,IAHX,mBAGrB6C,EAHqB,KAGZe,EAHY,iDAW5B,WAA2BrB,GAA3B,eAAAC,EAAA,sEACyBF,EAAUC,GADnC,YAEiBsB,KADTX,EADR,SAK4B,MAApBA,EAASY,SACXH,EAAUT,EAASX,KAAKjB,QACxBZ,QAAQC,IAAIkC,IAJda,GAAa,GAHjB,4CAX4B,kEAwB5B,4BAAAlB,EAAA,sEACyBI,IADzB,OAE0B,OADlBM,EADR,QAEeY,QACXF,EAAWV,EAASX,MAHxB,4CAxB4B,sBAoC5B,OALAwB,qBAAU,YA/BkB,mCAgC1BC,KACA,IAIA,oCAEE,kBAAC,UAAD,KACE,kBAAC,EAAD,CAAQxE,MAAM,uBACd,kBAAC,YAAD,KACE,kBAAC,EAAD,CAAQO,cArCI,SAACwC,GACnBmB,GAAa,GANa,oCAO1BO,CAAW1B,QAuCPkB,GAAa,kBAAC,EAAD,OAGZA,IAAcnC,EAAO4C,QAAW,wBAAIzE,UAAU,2BAAd,+BAIjC6B,EAAO4C,OAAO,GAAK,kBAAC,EAAD,CAAY5C,OAAQA,MClD3B6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9B,MAAK,SAAA+B,GACJA,EAAaC,gBAEd9B,OAAM,SAAAC,GACL1C,QAAQ0C,MAAMA,EAAM8B,c","file":"static/js/main.cb0e3bec.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../../index.css'\nimport { Container, Section } from 'react-bulma-components'\n\nconst Header = ({ title }) => {\n  return (\n    <Section>\n      <Container>\n        <div className=\"container\">\n          <div className=\"logo\">{title}</div>\n        </div>\n      </Container>\n    </Section>\n  )\n}\n\nHeader.prototype = {\n  title: PropTypes.string.isRequired\n}\n\n/*\n    <Section>\n      <Container>\n        <h1 className=\"title  has-text-centered\">{title}</h1>\n      </Container>\n    </Section>\n */\nexport default Header\n","import React, { useState } from 'react'\nimport { Button,Columns } from 'react-bulma-components'\n\n\nconst Search = ({handlerSubmit}) => {\n  const [formSearch, setFormSearch] = useState({\n    comuna: '',\n    local: ''\n  })\n  const handleChange=(event)=>{\n    const {name,value} = event.target\n    console.log(name,value)\n    setFormSearch({...formSearch,[name]:value})\n  }\n\n  const _handleSubmit=(e)=>{\n    e.preventDefault()\n    handlerSubmit({...formSearch})\n  }\n\n  return (\n    <div>\n      <form onSubmit={_handleSubmit} >\n      <Columns>\n        <Columns.Column size={1}>\n          <p style={{ color: 'white' }} className=\"is-4\">Comuna:</p>\n        </Columns.Column>\n        <Columns.Column size={3}>\n          <input type=\"text\" className=\"input\" name=\"comuna\" onChange={handleChange} value={formSearch.comuna} />\n        </Columns.Column>\n        <Columns.Column size={1}>\n          <p style={{ color: 'white'}} className=\"is-4\">Local:</p>\n        </Columns.Column>\n        <Columns.Column size={3}>\n          <input type=\"text\" className=\"input\" name=\"local\" onChange={handleChange} value={formSearch.local} />\n        </Columns.Column>\n        <Columns.Column size={3}>\n          <Button type=\"submit\" color=\"success\">Buscar</Button>\n        </Columns.Column>\n      </Columns>\n      </form>\n    </div>\n\n    /*<div>\n      <label className=\"label\">Comuna</label>\n      <input id=\"txtComuna\" type=\"text\"className=\"is-centered\"  />\n      <label className=\"label\">Local</label>\n      <input id=\"txtLocal\" type=\"text\" className=\"input\" />\n      <Button color=\"success\">Buscar</Button>\n    </div>*/\n\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { Card, Columns,  Heading } from 'react-bulma-components'\n\nconst ListStores = ({ stores }) => {\n  console.log(stores)\n  return (\n    <Columns>\n      {\n        stores.map((store, index) => (\n          <Columns.Column size={6} key={index}>\n            <Card style={{ background: '#132A47' }}>\n              <Card.Content>\n                <Heading className=\"has-text-white columns is-2\" size={6}>\n                  <p className=\"has-text-warning\">Nombre:</p>\n                  {store.local_nombre}\n                </Heading>\n                <Heading className=\"has-text-white columns is-2\" size={6}>\n                  <p className=\"has-text-warning\">Dirección:</p>\n                  {store.local_direccion}\n                </Heading>\n                <Heading className=\"has-text-white columns is-2\" size={6}>\n                  <p className=\"has-text-warning\">Teléfono:</p>\n                  {store.local_telefono}\n                </Heading>\n                <Heading className=\"has-text-white columns is-2\" size={6}>\n                  <p className=\"has-text-warning\">Latitud:</p>\n                  {store.local_lat}\n                </Heading>\n                <Heading className=\"has-text-white columns is-2\" size={6}>\n                  <p className=\"has-text-warning\">Longitud:</p>\n                  {store.local_lng}\n                </Heading>\n              </Card.Content>\n            </Card>\n          </Columns.Column>\n        ))\n      }\n    </Columns>\n\n  )\n}\n\nexport default ListStores","import axios from 'axios'\n\nconst baseUrl = process.env.REACT_APP_BASE_URL\nconst baseULComuna = 'https://midastest.minsal.cl/farmacias/maps/index.php/utilidades/maps_obtener_comunas_por_regiones'\n\nexport async function getStores (data) {\n  try {\n    return await axios({\n      url: `${baseUrl}//stores?comuna_nombre=${data.comuna}&local_nombre=${data.local}`,\n      method: 'GET'\n    })\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport async function getComunas () {\n  try {\n    let comunas = ''\n    const data = new FormData()\n\n    data.append('reg_id', '7')\n\n    await axios.post(`${baseULComuna}`, data).then((response => {\n      comunas = response\n    })).catch(error => {\n      console.log(error)\n    })\n    return comunas\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n","\nimport React from 'react'\nimport { Loader } from 'react-bulma-components'\n\nconst Loading = () => {\n  return (\n    <div className=\"columns is-centered\">\n      <Loader style={{ width: 100, height: 100 }}/>\n    </div>\n  )\n}\n\nexport default Loading\n","import React, { useState,useEffect } from 'react'\nimport Header from './Header'\nimport Search from './Search'\nimport ListStores from './ListStores'\nimport { getStores,getComunas } from '../services'\nimport Loading from './Loading'\nimport { Container, Section } from 'react-bulma-components'\n\n\nconst DrugstoreLayout = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [stores, setStores] = useState([])\n  const [comunas, setComunas] = useState('')\n\n  const handlerSubmit=(data)=>{\n    setIsLoading(true)\n    loadStores(data)\n  }\n\n\n  async function loadStores (data) {\n    const response = await getStores(data)\n    if (response===undefined){\n      setIsLoading(false)\n    }else{\n      if (response.status === 200) {\n        setStores(response.data.stores)\n        console.log(comunas)\n      }\n      setIsLoading(false)\n    }\n  }\n\n  async function loadComuna () {\n    const response = await getComunas()\n    if (response.status === 200) {\n      setComunas(response.data)\n    }\n  }\n\n  useEffect(()=>{\n    loadComuna()\n  },[])\n\n\n  return (\n    <>\n\n      <Section>\n        <Header title=\"Farmacias de turno\"/>\n        <Container>\n          <Search handlerSubmit={handlerSubmit} />\n        </Container>\n      </Section>\n      {\n        isLoading && <Loading/>\n      }\n      {\n        !isLoading && !stores.length && (<h2 className=\"title has-text-centered\">No se encontraron farmacias</h2>)\n      }\n\n      {\n        stores.length>0 && <ListStores stores={stores}/>\n      }\n\n    </>\n  )\n}\n\nexport default DrugstoreLayout","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport DrugstoreLayout from './Drugstores/components/DrugstoreLayout'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DrugstoreLayout />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}